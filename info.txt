Mark Allocation
Total marks: 12.5
Git commits (as-per Section 5): 2 marks
Code commenting: 1 mark
Encryption with a rotation cipher given plain text and key: 1 mark
Decryption with a rotation cipher given cipher text and key: 1 mark
Encryption with a substitution cipher given plain text and key: 1 mark
Decryption with a substitution cipher given cipher text and key: 1 mark
Completing all of the above achieves a passing grade of 7/12.5 (56%).
Decryption of a previously unseen cipher text encrypted with a rotation cipher: 1.5 marks
Decryption of a day-1 provided block of cipher text encrypted with a substitution cipher: 1 mark
Decryption of an unseen block of cipher text on marking day: 1.5 marks

The substitution cipher decryption marks will be allocated based on how many letters are correctly worked
out by your program.
The following marks will be awarded for various cipher and plain text input methods (if multiple methods
are used demonstrators may, at their digression, award marks based on the \most advanced" method used
at any point in the program):

 Hard-coded cipher and plain text: +0 marks
 Cipher and plain text read from stdin: +0.5 mark
 Cipher and plain text read from, and written to, les: +0.75 marks

The following marks will be awarded for various task selection methods:
 Task selection with a hard-coded variable: +0 marks
 Task selection with a \simple" method utilising stdin (eg: read a number without prompting the
user): +0.25 marks
 Task selection with a \user friendly" menu system: +0.5 marks
 Task selection with a file header or command line arguments: +0.75 marks
At the demonstrator's discretion, the following marks may be deducted:
 Comments are woefully inadequate, uninformative, or missing: -1 mark
 Code indentation is confusing, not attempted, or is in some way unnecessarily dicult to read: -1
mark